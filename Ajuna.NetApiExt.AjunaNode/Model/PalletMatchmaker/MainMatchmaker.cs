//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Ajuna.NetApi.Model.Extrinsics;
using Ajuna.NetApi.Model.Meta;
using Ajuna.NetApi.Model.PalletMatchmaker;
using Ajuna.NetApi.Model.SpCore;
using Ajuna.NetApi.Model.Types;
using Ajuna.NetApi.Model.Types.Base;
using Ajuna.NetApi.Model.Types.Primitive;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Ajuna.NetApi.Model.PalletMatchmaker
{
    
    
    public sealed class MatchmakerStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        public MatchmakerStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Matchmaker", "BracketBounds"), new System.Tuple<Ajuna.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                            Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Ajuna.NetApi.Model.Types.Primitive.U8), typeof(BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U16,Ajuna.NetApi.Model.Types.Primitive.U16>)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Matchmaker", "BracketBufferIndex"), new System.Tuple<Ajuna.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                            Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U8,Ajuna.NetApi.Model.Types.Primitive.U16>), typeof(Ajuna.NetApi.Model.SpCore.AccountId32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("Matchmaker", "BracketItemKey"), new System.Tuple<Ajuna.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                            Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                            Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U8,Ajuna.NetApi.Model.SpCore.AccountId32>), typeof(Ajuna.NetApi.Model.PalletMatchmaker.Player)));
        }
        
        /// <summary>
        /// >> BracketBoundsParams
        /// </summary>
        public static string BracketBoundsParams(Ajuna.NetApi.Model.Types.Primitive.U8 key)
        {
            return RequestGenerator.GetStorage("Matchmaker", "BracketBounds", Ajuna.NetApi.Model.Meta.Storage.Type.Map, new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                        Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Ajuna.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> BracketBounds
        /// </summary>
        public async Task<BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U16,Ajuna.NetApi.Model.Types.Primitive.U16>> BracketBounds(Ajuna.NetApi.Model.Types.Primitive.U8 key, CancellationToken token)
        {
            string parameters = MatchmakerStorage.BracketBoundsParams(key);
            return await _client.GetStorageAsync<BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U16,Ajuna.NetApi.Model.Types.Primitive.U16>>(parameters, token);
        }
        
        /// <summary>
        /// >> BracketBufferIndexParams
        /// </summary>
        public static string BracketBufferIndexParams(BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U8,Ajuna.NetApi.Model.Types.Primitive.U16> key)
        {
            return RequestGenerator.GetStorage("Matchmaker", "BracketBufferIndex", Ajuna.NetApi.Model.Meta.Storage.Type.Map, new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                        Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Ajuna.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> BracketBufferIndex
        /// </summary>
        public async Task<Ajuna.NetApi.Model.SpCore.AccountId32> BracketBufferIndex(BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U8,Ajuna.NetApi.Model.Types.Primitive.U16> key, CancellationToken token)
        {
            string parameters = MatchmakerStorage.BracketBufferIndexParams(key);
            return await _client.GetStorageAsync<Ajuna.NetApi.Model.SpCore.AccountId32>(parameters, token);
        }
        
        /// <summary>
        /// >> BracketItemKeyParams
        /// </summary>
        public static string BracketItemKeyParams(BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U8,Ajuna.NetApi.Model.SpCore.AccountId32> key)
        {
            return RequestGenerator.GetStorage("Matchmaker", "BracketItemKey", Ajuna.NetApi.Model.Meta.Storage.Type.Map, new Ajuna.NetApi.Model.Meta.Storage.Hasher[] {
                        Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat,
                        Ajuna.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Ajuna.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> BracketItemKey
        /// </summary>
        public async Task<Ajuna.NetApi.Model.PalletMatchmaker.Player> BracketItemKey(BaseTuple<Ajuna.NetApi.Model.Types.Primitive.U8,Ajuna.NetApi.Model.SpCore.AccountId32> key, CancellationToken token)
        {
            string parameters = MatchmakerStorage.BracketItemKeyParams(key);
            return await _client.GetStorageAsync<Ajuna.NetApi.Model.PalletMatchmaker.Player>(parameters, token);
        }
    }
    
    public sealed class MatchmakerCalls
    {
    }
    
    /// <summary>
    /// >> Queued
    /// Player is queued for a match.
    /// </summary>
    public sealed class EventQueued : BaseTuple<Ajuna.NetApi.Model.PalletMatchmaker.Player>
    {
    }
    
    /// <summary>
    /// >> Matched
    /// Player is matched and is out of queue.
    /// </summary>
    public sealed class EventMatched : BaseTuple<Ajuna.NetApi.Model.PalletMatchmaker.Player>
    {
    }
    
    public enum MatchmakerErrors
    {
        
        /// <summary>
        /// >> PlayerAlreadyInQueue
        /// Player is already in a matchmaking queue.
        /// </summary>
        PlayerAlreadyInQueue,
    }
}
